{"ast":null,"code":"import{DATE_FORMATS}from'../constants';/**\n * Format currency amount\n */export const formatCurrency=amount=>{return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD'}).format(amount);};/**\n * Format date in short format (for lists)\n */export const formatDateShort=date=>{return new Intl.DateTimeFormat('en-US',DATE_FORMATS.SHORT).format(date);};/**\n * Format date in long format (for details)\n */export const formatDateLong=date=>{return new Intl.DateTimeFormat('en-US',DATE_FORMATS.LONG).format(date);};/**\n * Format file size\n */export const formatFileSize=bytes=>{if(bytes===0)return'0 Bytes';const k=1024;const sizes=['Bytes','KB','MB','GB'];const i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(2))+' '+sizes[i];};/**\n * Truncate text with ellipsis\n */export const truncateText=(text,maxLength)=>{if(text.length<=maxLength)return text;return text.slice(0,maxLength-3)+'...';};/**\n * Capitalize first letter\n */export const capitalize=str=>{return str.charAt(0).toUpperCase()+str.slice(1);};","map":{"version":3,"names":["DATE_FORMATS","formatCurrency","amount","Intl","NumberFormat","style","currency","format","formatDateShort","date","DateTimeFormat","SHORT","formatDateLong","LONG","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","truncateText","text","maxLength","length","slice","capitalize","str","charAt","toUpperCase"],"sources":["/Users/carl/Documents/Personal/CS Projects/Beta Treasurer App/BetaMoney/src/utils/formatters.ts"],"sourcesContent":["import { DATE_FORMATS } from '../constants';\n\n/**\n * Format currency amount\n */\nexport const formatCurrency = (amount: number): string => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(amount);\n};\n\n/**\n * Format date in short format (for lists)\n */\nexport const formatDateShort = (date: Date): string => {\n  return new Intl.DateTimeFormat('en-US', DATE_FORMATS.SHORT).format(date);\n};\n\n/**\n * Format date in long format (for details)\n */\nexport const formatDateLong = (date: Date): string => {\n  return new Intl.DateTimeFormat('en-US', DATE_FORMATS.LONG).format(date);\n};\n\n/**\n * Format file size\n */\nexport const formatFileSize = (bytes: number): string => {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\n/**\n * Truncate text with ellipsis\n */\nexport const truncateText = (text: string, maxLength: number): string => {\n  if (text.length <= maxLength) return text;\n  return text.slice(0, maxLength - 3) + '...';\n};\n\n/**\n * Capitalize first letter\n */\nexport const capitalize = (str: string): string => {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}; "],"mappings":"AAAA,OAASA,YAAY,KAAQ,cAAc,CAE3C;AACA;AACA,GACA,MAAO,MAAM,CAAAC,cAAc,CAAIC,MAAc,EAAa,CACxD,MAAO,IAAI,CAAAC,IAAI,CAACC,YAAY,CAAC,OAAO,CAAE,CACpCC,KAAK,CAAE,UAAU,CACjBC,QAAQ,CAAE,KACZ,CAAC,CAAC,CAACC,MAAM,CAACL,MAAM,CAAC,CACnB,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAM,eAAe,CAAIC,IAAU,EAAa,CACrD,MAAO,IAAI,CAAAN,IAAI,CAACO,cAAc,CAAC,OAAO,CAAEV,YAAY,CAACW,KAAK,CAAC,CAACJ,MAAM,CAACE,IAAI,CAAC,CAC1E,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAG,cAAc,CAAIH,IAAU,EAAa,CACpD,MAAO,IAAI,CAAAN,IAAI,CAACO,cAAc,CAAC,OAAO,CAAEV,YAAY,CAACa,IAAI,CAAC,CAACN,MAAM,CAACE,IAAI,CAAC,CACzE,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAK,cAAc,CAAIC,KAAa,EAAa,CACvD,GAAIA,KAAK,GAAK,CAAC,CAAE,MAAO,SAAS,CAEjC,KAAM,CAAAC,CAAC,CAAG,IAAI,CACd,KAAM,CAAAC,KAAK,CAAG,CAAC,OAAO,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAC,CACzC,KAAM,CAAAC,CAAC,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACN,KAAK,CAAC,CAAGI,IAAI,CAACE,GAAG,CAACL,CAAC,CAAC,CAAC,CAEnD,MAAO,CAAAM,UAAU,CAAC,CAACP,KAAK,CAAGI,IAAI,CAACI,GAAG,CAACP,CAAC,CAAEE,CAAC,CAAC,EAAEM,OAAO,CAAC,CAAC,CAAC,CAAC,CAAG,GAAG,CAAGP,KAAK,CAACC,CAAC,CAAC,CACzE,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAO,YAAY,CAAGA,CAACC,IAAY,CAAEC,SAAiB,GAAa,CACvE,GAAID,IAAI,CAACE,MAAM,EAAID,SAAS,CAAE,MAAO,CAAAD,IAAI,CACzC,MAAO,CAAAA,IAAI,CAACG,KAAK,CAAC,CAAC,CAAEF,SAAS,CAAG,CAAC,CAAC,CAAG,KAAK,CAC7C,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAG,UAAU,CAAIC,GAAW,EAAa,CACjD,MAAO,CAAAA,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAGF,GAAG,CAACF,KAAK,CAAC,CAAC,CAAC,CACnD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}