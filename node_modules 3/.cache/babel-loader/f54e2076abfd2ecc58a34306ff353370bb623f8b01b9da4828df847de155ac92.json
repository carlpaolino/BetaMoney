{"ast":null,"code":"import React,{useState}from'react';import{useAuth}from'./hooks/useAuth';import Login from'./components/Login';import RequestsList from'./components/RequestsList';import NewRequest from'./components/NewRequest';import RequestDetail from'./components/RequestDetail';import'./styles/App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const{isAuthenticated,isLoading}=useAuth();const[showNewRequest,setShowNewRequest]=useState(false);const[selectedRequest,setSelectedRequest]=useState(null);const handleNewRequest=()=>{setShowNewRequest(true);};const handleNewRequestClose=()=>{setShowNewRequest(false);};const handleNewRequestSuccess=()=>{setShowNewRequest(false);// The real-time listener will automatically update the list\n};const handleViewRequest=request=>{setSelectedRequest(request);};const handleRequestDetailClose=()=>{setSelectedRequest(null);};const handleRequestUpdated=updatedRequest=>{// The real-time listener will automatically update the list\nsetSelectedRequest(updatedRequest);};if(isLoading){return/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})]});}if(!isAuthenticated){return/*#__PURE__*/_jsx(Login,{});}return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(RequestsList,{onNewRequest:handleNewRequest,onViewRequest:handleViewRequest}),showNewRequest&&/*#__PURE__*/_jsx(NewRequest,{onClose:handleNewRequestClose,onSuccess:handleNewRequestSuccess}),selectedRequest&&/*#__PURE__*/_jsx(RequestDetail,{request:selectedRequest,onClose:handleRequestDetailClose,onRequestUpdated:handleRequestUpdated})]});}export default App;","map":{"version":3,"names":["React","useState","useAuth","Login","RequestsList","NewRequest","RequestDetail","jsx","_jsx","jsxs","_jsxs","App","isAuthenticated","isLoading","showNewRequest","setShowNewRequest","selectedRequest","setSelectedRequest","handleNewRequest","handleNewRequestClose","handleNewRequestSuccess","handleViewRequest","request","handleRequestDetailClose","handleRequestUpdated","updatedRequest","className","children","onNewRequest","onViewRequest","onClose","onSuccess","onRequestUpdated"],"sources":["/Users/carl/Documents/Personal/CS Projects/Beta Treasurer App/BetaMoney/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useAuth } from './hooks/useAuth';\nimport Login from './components/Login';\nimport RequestsList from './components/RequestsList';\nimport NewRequest from './components/NewRequest';\nimport RequestDetail from './components/RequestDetail';\nimport { ReimbursementRequest } from './types';\nimport './styles/App.css';\n\nfunction App() {\n  const { isAuthenticated, isLoading } = useAuth();\n  const [showNewRequest, setShowNewRequest] = useState(false);\n  const [selectedRequest, setSelectedRequest] = useState<ReimbursementRequest | null>(null);\n\n  const handleNewRequest = () => {\n    setShowNewRequest(true);\n  };\n\n  const handleNewRequestClose = () => {\n    setShowNewRequest(false);\n  };\n\n  const handleNewRequestSuccess = () => {\n    setShowNewRequest(false);\n    // The real-time listener will automatically update the list\n  };\n\n  const handleViewRequest = (request: ReimbursementRequest) => {\n    setSelectedRequest(request);\n  };\n\n  const handleRequestDetailClose = () => {\n    setSelectedRequest(null);\n  };\n\n  const handleRequestUpdated = (updatedRequest: ReimbursementRequest) => {\n    // The real-time listener will automatically update the list\n    setSelectedRequest(updatedRequest);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"spinner\" />\n        <p>Loading...</p>\n      </div>\n    );\n  }\n\n  if (!isAuthenticated) {\n    return <Login />;\n  }\n\n  return (\n    <div className=\"app\">\n      <RequestsList\n        onNewRequest={handleNewRequest}\n        onViewRequest={handleViewRequest}\n      />\n\n      {showNewRequest && (\n        <NewRequest\n          onClose={handleNewRequestClose}\n          onSuccess={handleNewRequestSuccess}\n        />\n      )}\n\n      {selectedRequest && (\n        <RequestDetail\n          request={selectedRequest}\n          onClose={handleRequestDetailClose}\n          onRequestUpdated={handleRequestUpdated}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,OAAO,KAAQ,iBAAiB,CACzC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,YAAY,KAAM,2BAA2B,CACpD,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CAEtD,MAAO,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAAEC,eAAe,CAAEC,SAAU,CAAC,CAAGX,OAAO,CAAC,CAAC,CAChD,KAAM,CAACY,cAAc,CAAEC,iBAAiB,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CAC3D,KAAM,CAACe,eAAe,CAAEC,kBAAkB,CAAC,CAAGhB,QAAQ,CAA8B,IAAI,CAAC,CAEzF,KAAM,CAAAiB,gBAAgB,CAAGA,CAAA,GAAM,CAC7BH,iBAAiB,CAAC,IAAI,CAAC,CACzB,CAAC,CAED,KAAM,CAAAI,qBAAqB,CAAGA,CAAA,GAAM,CAClCJ,iBAAiB,CAAC,KAAK,CAAC,CAC1B,CAAC,CAED,KAAM,CAAAK,uBAAuB,CAAGA,CAAA,GAAM,CACpCL,iBAAiB,CAAC,KAAK,CAAC,CACxB;AACF,CAAC,CAED,KAAM,CAAAM,iBAAiB,CAAIC,OAA6B,EAAK,CAC3DL,kBAAkB,CAACK,OAAO,CAAC,CAC7B,CAAC,CAED,KAAM,CAAAC,wBAAwB,CAAGA,CAAA,GAAM,CACrCN,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CAAC,CAED,KAAM,CAAAO,oBAAoB,CAAIC,cAAoC,EAAK,CACrE;AACAR,kBAAkB,CAACQ,cAAc,CAAC,CACpC,CAAC,CAED,GAAIZ,SAAS,CAAE,CACb,mBACEH,KAAA,QAAKgB,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCnB,IAAA,QAAKkB,SAAS,CAAC,SAAS,CAAE,CAAC,cAC3BlB,IAAA,MAAAmB,QAAA,CAAG,YAAU,CAAG,CAAC,EACd,CAAC,CAEV,CAEA,GAAI,CAACf,eAAe,CAAE,CACpB,mBAAOJ,IAAA,CAACL,KAAK,GAAE,CAAC,CAClB,CAEA,mBACEO,KAAA,QAAKgB,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBnB,IAAA,CAACJ,YAAY,EACXwB,YAAY,CAAEV,gBAAiB,CAC/BW,aAAa,CAAER,iBAAkB,CAClC,CAAC,CAEDP,cAAc,eACbN,IAAA,CAACH,UAAU,EACTyB,OAAO,CAAEX,qBAAsB,CAC/BY,SAAS,CAAEX,uBAAwB,CACpC,CACF,CAEAJ,eAAe,eACdR,IAAA,CAACF,aAAa,EACZgB,OAAO,CAAEN,eAAgB,CACzBc,OAAO,CAAEP,wBAAyB,CAClCS,gBAAgB,CAAER,oBAAqB,CACxC,CACF,EACE,CAAC,CAEV,CAEA,cAAe,CAAAb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}