{"ast":null,"code":"import{useState,useEffect}from'react';import{onAuthStateChanged}from'firebase/auth';import{auth}from'../services/firebase';import{AuthService}from'../services/authService';export const useAuth=()=>{const[isAuthenticated,setIsAuthenticated]=useState(false);const[currentUser,setCurrentUser]=useState(null);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const unsubscribe=onAuthStateChanged(auth,async firebaseUser=>{setIsLoading(true);setError(null);if(firebaseUser){try{const user=await AuthService.getCurrentUser(firebaseUser);if(user){setCurrentUser(user);setIsAuthenticated(true);}else{setCurrentUser(null);setIsAuthenticated(false);}}catch(err){setError('Failed to load user data');setCurrentUser(null);setIsAuthenticated(false);}}else{setCurrentUser(null);setIsAuthenticated(false);}setIsLoading(false);});return()=>unsubscribe();},[]);const signInAsGuest=async(email,name)=>{setIsLoading(true);setError(null);try{const user=await AuthService.signInAsGuest(email,name);setCurrentUser(user);setIsAuthenticated(true);}catch(err){setError(err instanceof Error?err.message:'Failed to sign in');}finally{setIsLoading(false);}};const signInAsTreasurer=async(email,password)=>{setIsLoading(true);setError(null);try{const user=await AuthService.signInAsTreasurer(email,password);setCurrentUser(user);setIsAuthenticated(true);}catch(err){setError(err instanceof Error?err.message:'Failed to sign in');}finally{setIsLoading(false);}};const signOut=async()=>{setIsLoading(true);setError(null);try{await AuthService.signOutUser();setCurrentUser(null);setIsAuthenticated(false);}catch(err){setError(err instanceof Error?err.message:'Failed to sign out');}finally{setIsLoading(false);}};return{isAuthenticated,currentUser,isLoading,error,signInAsGuest,signInAsTreasurer,signOut};};","map":{"version":3,"names":["useState","useEffect","onAuthStateChanged","auth","AuthService","useAuth","isAuthenticated","setIsAuthenticated","currentUser","setCurrentUser","isLoading","setIsLoading","error","setError","unsubscribe","firebaseUser","user","getCurrentUser","err","signInAsGuest","email","name","Error","message","signInAsTreasurer","password","signOut","signOutUser"],"sources":["/Users/carl/Documents/Personal/CS Projects/Beta Treasurer App/BetaMoney/src/hooks/useAuth.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth } from '../services/firebase';\nimport { AuthService } from '../services/authService';\nimport { User } from '../types';\n\nexport const useAuth = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {\n      setIsLoading(true);\n      setError(null);\n\n      if (firebaseUser) {\n        try {\n          const user = await AuthService.getCurrentUser(firebaseUser);\n          if (user) {\n            setCurrentUser(user);\n            setIsAuthenticated(true);\n          } else {\n            setCurrentUser(null);\n            setIsAuthenticated(false);\n          }\n        } catch (err) {\n          setError('Failed to load user data');\n          setCurrentUser(null);\n          setIsAuthenticated(false);\n        }\n      } else {\n        setCurrentUser(null);\n        setIsAuthenticated(false);\n      }\n\n      setIsLoading(false);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const signInAsGuest = async (email: string, name: string) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const user = await AuthService.signInAsGuest(email, name);\n      setCurrentUser(user);\n      setIsAuthenticated(true);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to sign in');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const signInAsTreasurer = async (email: string, password: string) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const user = await AuthService.signInAsTreasurer(email, password);\n      setCurrentUser(user);\n      setIsAuthenticated(true);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to sign in');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const signOut = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      await AuthService.signOutUser();\n      setCurrentUser(null);\n      setIsAuthenticated(false);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to sign out');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return {\n    isAuthenticated,\n    currentUser,\n    isLoading,\n    error,\n    signInAsGuest,\n    signInAsTreasurer,\n    signOut\n  };\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}